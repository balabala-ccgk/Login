package com.google.login;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

    /**
     * @program: classprogram
     * @Description:
     * @author: 啦啦啦
     * @date: 2019/11/10
     */
    public class RegisterForm {

        public static void main(String[] args) {
            // 创建 JFrame 实例
            JFrame frame1 = new JFrame("Register Example");
            // Setting the width and height of frame
            frame1.setSize(350, 300);
            frame1.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);


            /* 创建面板，这个类似于 HTML 的 div 标签
             * 我们可以创建多个面板并在 JFrame 中指定位置
             * 面板中我们可以添加文本字段，按钮及其他组件。
             */
            JPanel panel1 = new JPanel();
            // 添加面板
            frame1.add(panel1);
            /*
             * 调用用户定义的方法并添加组件到面板
             */
            placeComponents(panel1);

            // 设置界面可见
            frame1.setVisible(true);
        }

        private static void placeComponents(JPanel panel) {

            final String COMMAND_LOGIN = "LOGIN";
            final String COMMAND_REGISTER = "REGISTER";
            final String COMMAND_FORGETPWD = "forgetpwd";
            /* 布局部分我们这边不多做介绍
             * 这边设置布局为 null
             */
            panel.setLayout(null);

            // 创建 JLabel
            JLabel userLabel = new JLabel("User:");
            /* 这个方法定义了组件的位置。
             * setBounds(x, y, width, height)
             * x 和 y 指定左上角的新位置，由 width 和 height 指定新的大小。
             */
            userLabel.setBounds(10, 20, 80, 25);
            panel.add(userLabel);

            /*
             * 创建文本域用于用户输入
             */
            JTextField createuserText = new JTextField(20);
            createuserText.setBounds(100, 20, 165, 25);
            panel.add(createuserText);

            // 输入密码的文本域
            JLabel passwordLabel = new JLabel("Password:");
            passwordLabel.setBounds(10, 50, 80, 25);
            panel.add(passwordLabel);

            /*
             *这个类似用于输入的文本域
             * 但是输入的信息会以点号代替，用于包含密码的安全性
             */
            JPasswordField passwordText = new JPasswordField(20);
            passwordText.setBounds(100, 50, 165, 25);
            panel.add(passwordText);

            // 输入邮箱的文本域
            JLabel emailLabel = new JLabel("email:");
            emailLabel.setBounds(10, 80, 80, 25);
            panel.add(emailLabel);

            JTextField emailText = new JTextField(20);
            emailText.setBounds(100, 80, 165, 25);
            panel.add(emailText);



            //创建 注册按钮
            JButton registerButton = new JButton("register");
            registerButton.setBounds(135, 120, 80, 25);
            registerButton.setActionCommand(COMMAND_REGISTER);
            panel.add(registerButton);



        }



    }

